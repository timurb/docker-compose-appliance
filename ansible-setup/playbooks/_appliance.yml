#
# Don't use the playbook directly
#
# Required variables (play-scoped)
# - host_role
# - see also vars section

- hosts: "role-{{ host_role }}"
  gather_facts: no
  vars:
    appliance_name: "{{ host_role }}"
    appliance_user: "{{ appliance_name }}"
    appliance_dir: "{{ appliance_base_dir | default('/') }}{{ appliance_name }}"

    appliance_source_compose_path: "docker-compose/{{ appliance_name }}"
    appliance_compose_files:
      - docker-compose.yml

    appliance_autostart: false
    appliance_swarm: false

    appliance_scripts:
      - "{% if not appliance_swarm | bool %} start-local.sh {% endif %}"
      - "{% if not appliance_swarm | bool %} stop-local.sh {% endif %}"
      - "{% if appliance_swarm | bool %} start-swarm.sh {% endif %}"
      - "{% if appliance_swarm | bool %} stop-swarm.sh {% endif %}"

    appliance_start_command: "{% if appliance_swarm | bool %} start-swarm.sh {% else %} start-local.sh {% endif %}"

    appliance_compose_files_filtered: "{{ appliance_compose_files | default([]) | select() | map('trim') | list }}"
    appliance_scripts_filtered: "{{ appliance_scripts | default([]) | select() | map('trim') | list }}"
   

  tasks:
  - name: Wait 600 seconds for target connection to become reachable/usable
    wait_for_connection:

  - name: "Create user for {{ appliance_user }}"
    user:
      name: "{{ appliance_user }}"
      shell: /bin/bash
      home: "{{ appliance_dir }}"
      state: present
      groups: docker
      append: true

  - name: "Deploy docker-compose file for {{ appliance_name }}"
    template:
      src: "{{ appliance_source_compose_path }}/{{ item }}"
      dest: "{{ appliance_dir }}/{{ item }}"
      owner: root
      mode: 0644
    loop: "{{ appliance_compose_files_filtered }}"

  - name: "Create management scripts for {{ appliance_name }}"
    template:
      src: "templates/{{ item }}.j2"
      dest: "{{ appliance_dir }}/{{ item }}"
      owner: root
      mode: 0755
    with_items: "{{ appliance_scripts_filtered }}"

  - name: "Start compose services for {{ appliance_name }}"
    command: "./{{ appliance_start_command | trim }}"
    args:
      chdir: "{{ appliance_dir }}"
    become: yes
    become_user: "{{ appliance_user }}"
    when: appliance_autostart | bool
